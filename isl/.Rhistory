install.packages("ISLR")
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
num_vect < 1
tf <- num_vect[which(num_vect < 1)]
which(num_vect < 1)
tf <- num_vect < 1
tf
?
Q
main()
install_course("Advanced R Programming")
main()
swirl()
Sys.Date()
mean(c(2,4,5))
main()
swirl()
map_chr(c(5, 3, 4), int_to_string)
map_lgl(c(1,2,3,5) gt, 3)
map_lgl(c(1,2,3,5) gt, b = 3)
map_lgl(c(1,2,3,5) gt(), b = 3)
map_lgl(c(1,2,3,5), gt, b =3 )
map_lgl(c(1,2,3,4,5), gt, b =3 )
map_if(c(1,2,3,4,5), is_even, square)
map_if(c(1,2,3,4), is_even, square)
map_at(c(4, 6, 2, 3, 8), c(1,3,4), square)
map2_chr(1:26, a:z, paste)
map2_chr(1:26, 1, paste)
map2_chr(1:26, letters, paste)
map2_chr(letters, 1:26, paste)
reduce(c(1, 3, 5, 7), add_talk)
reduce(c("a", "b", "c", "d"), paste_talk)
reduce(c("a", "b", "c", "d"), paste_talk, reduce_right)
j
reduce(c("a", "b", "c", "d"), paste_talk, reduce_right)
reduce(c("a", "b", "c", "d"), paste_talk)
reduce_right(c("a", "b", "c", "d"), paste_talk)
contains(random_ints)
contains(45, random_ints)
contains(random_ints, 45)
detect(random_ints, is_even())
detect(random_ints, is_even
Q
detect(random_ints, is_even)
fake.close.price <- rnorm(10, 50, .25)
Q
bye()
fake.close.price <- rnorm(10, 50, .25)
fake.close.price <- rnorm(10, 50, 25)
browser()
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
close.price
source('~/SourceTree/localRepo/archive/Yield_old.R')
close.price
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
source('~/SourceTree/localRepo/archive/Yield_old.R')
fake.close.price
library("ISLR", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?ISLR
college <- read.csv("College.csv")
college <- read.csv("College.csv")
rownames(college) <- college[,1]
college
fix(college)
college
source('~/SourceTree/ISL/Chapter2.R', echo=TRUE)
install.packages("XQuartz")
college
source('~/SourceTree/ISL/Chapter2.R', echo=TRUE)
college <- college[,-1]
fix(college)
college
pairs(college)
plot(college)
plot(college)
college <- college[,-1]
college
rownames(college)
Elite <- rep("No",nrow(college))
Elite[college$Top10perc >50]="Yes"
Elite <- as.factor(Elite)
college <-data.frame(
college ,
Elite)
View(college)
attach(college)
plot(Outstate, Elite)
pairs(college[,1:10])
hist(college)
hist(Elite)
hist(Elite)
summary(college)
hist(Grad.Rate)
